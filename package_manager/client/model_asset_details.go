/*
 * Godot Asset Library
 *
 * Godot Engine's asset library
 *
 * API version: 1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

// A resource provided by the asset library (add-on, project, ...).<br> These properties are only returned when requesting a specific asset, not a list of assets.
type AssetDetails struct {
	// The asset's unique identifier.
	AssetId string `json:"asset_id,omitempty"`
	// The asset's type, can be \"addon\" or \"project\".
	Type_ string `json:"type,omitempty"`
	// The author's username.
	Author string `json:"author,omitempty"`
	// The author's unique identifier.
	AuthorId string `json:"author_id,omitempty"`
	// The category the asset belongs to.
	Category string `json:"category,omitempty"`
	// The unique identifier of the category the asset belongs to.
	CategoryId       string `json:"category_id,omitempty"`
	DownloadProvider string `json:"download_provider,omitempty"`
	DownloadCommit   string `json:"download_commit,omitempty"`
	// The asset's SHA-256 hash for the latest version. **Note:** This is currently always an empty string as asset versions' hashes aren't computed and stored yet.
	DownloadHash string `json:"download_hash,omitempty"`
	// The asset's license as a [SPDX license identifier](https://spdx.org/licenses/). For compatibility reasons, this field is called `cost` instead of `license`.
	Cost string `json:"cost,omitempty"`
	// The Godot version the asset's latest version is intended for (in `major.minor` format).<br> This field is present for compatibility reasons with the Godot editor. See also the `versions` array.
	GodotVersion string `json:"godot_version,omitempty"`
	// The asset's icon URL (should always be a PNG image).
	IconUrl string `json:"icon_url,omitempty"`
	// If `true`, the asset is marked as archived by its author. When archived, it can't receive any further reviews but can still be unarchived at any time by the author.
	IsArchived bool `json:"is_archived,omitempty"`
	// The asset's issue reporting URL (typically associated with the Git repository specified in `browse_url`).
	IssuesUrl string `json:"issues_url,omitempty"`
	// The date on which the asset entry was last updated. Note that entries can be edited independently of new asset versions being released.
	ModifyDate string `json:"modify_date,omitempty"`
	// The asset's rating (unused). For compatibility reasons, a value of 0 is always returned. You most likely want `score` instead.
	Rating string `json:"rating,omitempty"`
	// The asset's support level.
	SupportLevel string `json:"support_level,omitempty"`
	// The asset's title (usually less than 50 characters).
	Title string `json:"title,omitempty"`
	// The asset revision string (starting from 1).<br> Every time the asset is edited (for anyone and for any reason), this string is incremented by 1.
	Version string `json:"version,omitempty"`
	// The version string of the latest version (free-form, but usually `major.minor` or `major.minor.patch`).<br> This field is present for compatibility reasons with the Godot editor. See also the `versions` array.
	VersionString string         `json:"version_string,omitempty"`
	Searchable    string         `json:"searchable,omitempty"`
	Previews      []AssetPreview `json:"previews,omitempty"`
	// The asset's browsable repository URL.
	BrowseUrl string `json:"browse_url,omitempty"`
	// The asset's full description.
	Description string `json:"description,omitempty"`
	// The download link of the asset's latest version (should always point to a ZIP archive).<br> This field is present for compatibility reasons with the Godot editor. See also the `versions` array.
	DownloadUrl string `json:"download_url,omitempty"`
}
